# {{ ansible_managed }}

# Redirect from http(s)://{{ nsupdate.basedomain.name }} to http(s)://www.{{ nsupdate.basedomain.name }}
server {
    listen 0.0.0.0:80;
    listen [::]:80;
    listen 0.0.0.0:443 ssl;
    listen [::]:443 ssl;
    server_name {{ nsupdate.basedomain.name }};
    access_log /var/log/nginx/access.log anonymized;

    # Mozilla Guideline v5.4, nginx 1.17.7, OpenSSL 1.1.1d, intermediate configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_timeout 5m;
    ssl_session_cache shared:SSL:10m;  # about 40000 sessions
    ssl_session_tickets off;
    add_header Strict-Transport-Security "max-age=63072000" always;

    ssl_certificate /etc/letsencrypt/live/{{ nsupdate.basedomain.name }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ nsupdate.basedomain.name }}/privkey.pem;

    return 301 $scheme://www.{{ nsupdate.basedomain.name }}$request_uri;
}

server {
    listen 0.0.0.0:80;
    listen [::]:80;
    listen 0.0.0.0:443 ssl;
    listen [::]:443 ssl;
    server_name www.{{ nsupdate.basedomain.name }} ipv4.{{ nsupdate.basedomain.name }} ipv6.{{ nsupdate.basedomain.name }};
    access_log /var/log/nginx/access.log anonymized;

    # Mozilla Guideline v5.4, nginx 1.17.7, OpenSSL 1.1.1d, intermediate configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_timeout 5m;
    ssl_session_cache shared:SSL:10m;  # about 40000 sessions
    ssl_session_tickets off;
    add_header Strict-Transport-Security "max-age=63072000" always;

    ssl_certificate /etc/letsencrypt/live/{{ nsupdate.basedomain.name }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ nsupdate.basedomain.name }}/privkey.pem;

    location /static/ {
	alias /var/www/nsupdate.info/static/;
    }

    location /myip {
	add_header Content-Type text/plain;
	return 200 $remote_addr;
    }

    location / {
	include uwsgi_params;
	uwsgi_pass unix:/run/uwsgi/uwsgi.sock;
    }
}
